// Code generated by github.com/borderlesshq/graphrpc/libs/infiotinc/gqlgenc, DO NOT EDIT.

package msUsers

import (
	"context"
	"github.com/borderlesshq/graphrpc/libs/infiotinc/gqlgenc/client"
	"github.com/vektah/gqlparser/v2/gqlerror"
)

type Client struct {
	Client *client.Client
}

// OPERATION: login
type Login struct {
	Login *Login_Login "json:\"login\""
}

// OPERATION: login.login
type Login_Login struct {
	Id        string "json:\"id\""
	FirstName string "json:\"firstName\""
	LastName  string "json:\"lastName\""
	Email     string "json:\"email\""
}

// GqlErrorList is the struct of a standard graphql error response
type GqlErrorList struct {
	Errors gqlerror.List `json:"errors" msgpack:"errors"`
}

func (e *GqlErrorList) Error() string {
	return e.Errors.Error()
}

// Pointer helpers
const LoginDocument = `mutation login ($email: String!, $password: String!) {
	login(email: $email, password: $password) {
		id
		firstName
		lastName
		email
	}
}
`

func (Ξc *Client) Login(ctх context.Context, email string, password string) (*Login, error) {
	Ξvars := map[string]interface{}{
		"email":    email,
		"password": password,
	}

	{
		var data Login
		res, err := Ξc.Client.Mutation(ctх, "login", LoginDocument, Ξvars, &data)
		if err != nil {
			return nil, err
		}

		if res.Errors != nil && len(res.Errors) > 0 {
			return nil, res.Errors
		}

		return &data, nil
	}
}
